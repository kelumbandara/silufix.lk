<?php
    session_start();

    // Check if the user is logged in
    if (!isset($_SESSION["user_name"]))
    {
        // If not logged in, redirect to the login page
        header("Location: index.php");
        exit();
    }
    // Display the authenticated user's information
    $username = $_SESSION["user_name"];
?>
<?php
    include_once'../../headers/header.php';
    //include_once'../../dbconnection/dbConnection.php';
?>

<body class="hold-transition sidebar-mini layout-fixed">    
    <div class="wrapper">
        <!-- Preloader -->
        <div class="preloader flex-column justify-content-center align-items-center">
            <img class="animation__shake" src="../../myimg/favicon-16x16.png" alt="Sky Logo" height="60" width="60">
        </div>
        <!-- Navbar -->
        <?php
             include '../../headers/top-menu.php'
        ?>
        <!-- Main Sidebar Container -->
        <?php
            include '../../headers/left-sidebar.php'
        ?>
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Main content -->
            <section class="content">
                <div class="container-fluid">
                    <!-- /.card-header -->                    
                    <div class="card card-default" >
                        <div class="card-header">
                            <h3 class="card-title">Job History</h3>
                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>                                
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">  
                            <div class="row">                                 
                                <div class="col-md-2">    
                                    <div class="form-group">
                                        <label>Start Date</label>
                                        <div>
                                            <input class="form-control" type="date" id="id_startdate" onchange="funLoadAllChart()" name="startDate" style="font-size: 15px;"/>
                                        </div>
                                    </div> 
                                </div>
                                <div class="col-md-2">    
                                    <div class="form-group">
                                        <label>End Date</label>
                                        <div>
                                            <input class="form-control" type="date" id="id_enddate" onchange="funLoadAllChart()" name="endDate" style="font-size: 15px;"/>
                                        </div>
                                    </div> 
                                </div>
                                <div class="col-md-2">                   
                                    <label style="font-weight: bolder;" >Department v</label>    
                                    <select class="form-control select2" onchange="funLoadAllChart()" id="id_Select_Department" style="width: 100%;">
                                        <option selected="none"></option>                            
                                    </select>
                                </div>
                                <div class="col-md-2">                   
                                    <label style="font-weight: bolder;" >W/o category v</label>    
                                    <select class="form-control select2" onchange="funLoadAllChart()" id="id_Select_Category" style="width: 100%;">
                                       
                                    </select>
                                </div>
                                <div class="col-md-2">                   
                                    <label style="font-weight: bolder;" >Current Status</label>    
                                    <select class="form-control select2" onchange="funLoadAllChart()" id="id_Select_Mechanic" style="width: 100%;">
                                        <!--<option value="All">All</option> 
                                        <option value="New">New</option> 
                                        <option value="Inprogress">Inprogress</option> 
                                        <option value="Closed">Closed</option> -->
                                    </select>
                                </div>
                                <div class="col-md-2"> 
                                    <div class="form-group">                                         
                                        <div class="form-group">
                                            <button type="button" class="form-control btn btn-primary" onclick="funLoadAllChart()" id="id_ViewReport" name="viewbutton">View Report</button>
                                        </div>
                                    </div>
                                    <div class="form-group">                                         
                                        <div class="form-group">
                                            <button type="button" class="form-control btn btn-primary" onclick="funViewReport()" id="id_ViewReport" name="viewbutton">Print Report</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2"> 
                                    
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div class="card card-default" >                        
                                <div class="card-header">
                                    <h3 class="card-title"> Work order Status</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>    
                                    </div>
                                </div>
                                <div class="card-body" id="id_divBuildingMnt_chart1"> 
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card card-default" >  
                                <div class="card-header">
                                    <h3 class="card-title">complete Workorders</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>                                
                                    </div>
                                </div>
                                <div class="card-body" id="id_divBuildingMnt_chart2"> 
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card card-default" >                        
                                <div class="card-header">
                                    <h3 class="card-title">Cpmpleted Workorders By Department</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>    
                                    </div>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body" id="id_divBuildingMnt_chart3">  
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                    <section class="content">
                        <div class="container-fluid">                            
                            <div class="row">
                                <div class="col-12">
                                    <div class="card card-danger">  
                                        <div class="card-header">
                                            <h3 class="card-title"><b>Checkin Details(Table)</b></h3>                                    
                                        </div> 
                                    </div>
                                    <div class="card-body" id="id_class1">
                                        <table id="id_table1" class="table table-bordered table-striped display compact">
                                            <thead class="bg-info">
                                                <tr>
                                                <th>#</th>
                                                    <th>WorkOrderNo</th>
                                                    <th>CreatedDate</th>
                                                    <th>Department</th>
                                                    <th>W/o Category</th>
                                                    <th>Machine Category</th>
                                                    <th>Machine Number</th> 
                                                    <th>Fault type</th>           
                                                    <th>W/o Description</th>
                                                    <th>Chack in time</th>
                                                    <th>Chack out time</th>
                                                    <th>Total time duration</th>
                                                    <th>W/o Status</th>
                                                    <th>CreatedUser</th>
                                                    
                                                </tr>
                                            </thead>
                                            <tbody>                                          
                                            </tbody>
                                        </table>	
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    <section class="content">
                        <div class="container-fluid">                            
                            <div class="row">
                                <div class="col-12">
                                    <div class="card card-danger">  
                                        <div class="card-header">
                                            <h3 class="card-title"><b>Allocated Workorders(Table)</b></h3>                                    
                                        </div> 
                                    </div>
                                    <div class="card-body" id="id_class1">
                                        <table id="id_table2" class="table table-bordered table-striped display compact">
                                            <thead class="bg-info">
                                                <tr>
                                                <th>#</th>
                                                    <th>WorkOrderNo</th>
                                                    <th>CreatedDate</th>
                                                    <th>Department</th>
                                                    <th>W/o Category</th>
                                                    <th>Machine Category</th>
                                                    <th>Machine Number</th> 
                                                    <th>Fault type</th>           
                                                    <th>W/o Description</th>
                                                    <th>Created user</th>
                                                    <th>Allocated Mechanics</th>
                                                    <th>W/o Status</th>
                                                    <th>Respond Date Time</th>
                                                    <th>check in Mechanic</th>
                                                    
                                                </tr>
                                            </thead>
                                            <tbody>                                          
                                            </tbody>
                                        </table>	
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    <section class="content">
                        <div class="container-fluid">                            
                            <div class="row">
                                <div class="col-12">
                                    <div class="card card-danger">  
                                        <div class="card-header">
                                            <h3 class="card-title"><b>Allocated Workorders(Table)</b></h3>                                    
                                        </div> 
                                    </div>
                                    <div class="card-body" id="id_class1">
                                        <table id="id_table3" class="table table-bordered table-striped display compact">
                                            <thead class="bg-info">
                                                <tr>
                                                <th>#</th>
                                                    <th>WorkOrderNo</th>
                                                    <th>CreatedDate</th>
                                                    <th>Department</th>
                                                    <th>W/o Category</th>
                                                    <th>Machine Category</th>
                                                    <th>Machine Number</th> 
                                                    <th>Fault type</th>           
                                                    <th>W/o Description</th>
                                                    <th>W/o Status</th>
                                                    <th>Created user</th>
                                                    <th>Respond Date Time</th>
                                                    <th>Allocated Mechanics</th>
                                                    <th>check in Mechanic</th>
                                                    <th>Closed Date Time</th>
                                                    <th>Closed User</th>
                                                    <th>Total time duration</th>
                                                    <th>Re Opened Date Time</th>
                                                    <th>Re Opened User</th>
                                                    <th>Verified Date Time</th>
                                                    <th>Verified User</th>
                                                    
                                                </tr>
                                            </thead>
                                            <tbody>                                          
                                            </tbody>
                                        </table>	
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                <!-- Include Footer -->
                <?php
                    include '../../headers/footer-bar.php'
                ?> 
            </section>
        </div>    
    </div>    
 
<!-- Page specific script -->
<!-- ChartJS -->
    <script src="../../plugins/chart.js/Chart.min.js"></script>
    <script src="../../plugins/chartjs-plugin-datalabels/chartjs-plugin-datalabels.js"></script> 
<script>

    //--------------- Admin Panel Minimize ----------------------
    $('[data-widget="pushmenu"]').PushMenu("collapse");
    
    $(function () 
    {      
        //-------------- Load Datetime box ----------------------------------------
        //document.getElementById('id_startdate').valueAsDate = new Date();
        document.getElementById('id_startdate').valueAsDate = new Date(Date.now() - (3600 * 1000 * 24 * 7));
        document.getElementById('id_enddate').valueAsDate   = new Date(Date.now() + ( 3600 * 1000 * 24));         
               
        //$("#example2").DataTable({
        //    "responsive": true, "lengthChange": false, "autoWidth": false,
        //    "buttons": ["copy", "csv", "excel", "pdf", "print"]
        //}).buttons().container().appendTo('#example2_wrapper .col-md-6:eq(0)');
        
        $('#id_table1').DataTable({ 
           scrollX: true, // Enable horizontal scroll
           scrollY: "400px", // Set vertical scroll height
           scrollCollapse: true, // Collapse table height when less than scrollY
           paging: true, // Enable paging
           pageLength: 10, // Set the number of rows per page
           dom: 'Bfrtip',
           buttons: [
               { extend: 'copyHtml5', footer: true },
               { extend: 'excelHtml5', footer: true },
               { extend: 'csvHtml5', footer: true },
               { extend: 'pdfHtml5', footer: true },
               { extend: 'print', footer: true }
           ]
        });   
        $('#id_table2').DataTable({ 
           scrollX: true, // Enable horizontal scroll
           scrollY: "400px", // Set vertical scroll height
           scrollCollapse: true, // Collapse table height when less than scrollY
           paging: true, // Enable paging
           pageLength: 10, // Set the number of rows per page
           dom: 'Bfrtip',
           buttons: [
               { extend: 'copyHtml5', footer: true },
               { extend: 'excelHtml5', footer: true },
               { extend: 'csvHtml5', footer: true },
               { extend: 'pdfHtml5', footer: true },
               { extend: 'print', footer: true }
           ]
        });   
        $('#id_table3').DataTable({ 
           scrollX: true, // Enable horizontal scroll
           scrollY: "400px", // Set vertical scroll height
           scrollCollapse: true, // Collapse table height when less than scrollY
           paging: true, // Enable paging
           pageLength: 10, // Set the number of rows per page
           dom: 'Bfrtip',
           buttons: [
               { extend: 'copyHtml5', footer: true },
               { extend: 'excelHtml5', footer: true },
               { extend: 'csvHtml5', footer: true },
               { extend: 'pdfHtml5', footer: true },
               { extend: 'print', footer: true }
           ]
        }); 
        funLoad_Departments();
        funLoad_Categories();
        funLoad_Mechanic();
        
    });

    //-------------------- ViewReport Function --------------------------------------------
    function funLoadPieChart() 
    { 
        let intDebugEnable = 0;

        //alert("View reportButton clicked!");
        //- 1. get data from php page
        const DataAry = [];     
        
        //-------------- Chart1 ------------------------------
        DataAry[0] = "funGetData_PieChart1";        // Table Name
        DataAry[1] = document.getElementById("id_startdate").value;
        DataAry[2] = document.getElementById("id_enddate").value;
        DataAry[3] = document.getElementById("id_Select_Department").value;
        DataAry[4] = document.getElementById("id_Select_Category").value;
        DataAry[5] = document.getElementById("id_Select_Mechanic").value;
        

        if(intDebugEnable === 1) alert("DataAry :" + DataAry);
        $.post('getData_job_History.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2:" + json_data2);           
            var res = $.parseJSON(json_data2);                 
            if(res.Status_Ary[0] === "true")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data available");
                //--- Refres the Canvas DIV -----------------------------------------------   
                document.getElementById("id_divBuildingMnt_chart1").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart1").innerHTML = '<canvas id="id_canBuildingMnt_chart1" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
                
                const AryCheckIn_Lable      = res.Data_Ary[0];
                const AryCheckIn_Colors   = ["red","green","#FFFF00","FFA500","#FF0FFF","#FF0000","#808080","blue","#FF00FF"," #006400","#800000","#87CEEB", "#0A0FF"];

                var donutChartCanvas = $('#id_canBuildingMnt_chart1').get(0).getContext('2d');               
                var donutData = {
                    labels: AryCheckIn_Lable,
                    datasets: [
                    {
                        data: res.Data_Ary[1],
                        backgroundColor : AryCheckIn_Colors
                    }]};
                var donutOptions = {maintainAspectRatio : false, responsive : true};
                new Chart(donutChartCanvas, 
                {
                    options: 
                    {  
                        plugins: 
                        {
                            // Change options for ALL labels of THIS CHART
                            datalabels: {
                                font: {size: 20},
                                color: '#000000', 
                                anchor: 'center', 
                                display: 'auto'}
                        }
                    }, 
                    type: 'doughnut',
                    data: donutData,
                    //ptions: donutOptions

                });
            
            }
            else if(res.Status_Ary[0] === "false")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data not available"); 
                document.getElementById("id_divBuildingMnt_chart1").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart1").innerHTML = '<canvas id="id_canBuildingMnt_chart1" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
            }
            else
            {
                if(intDebugEnable === 1) alert("Error"); 
                document.getElementById("id_divBuildingMnt_chart1").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart1").innerHTML = '<canvas id="id_canBuildingMnt_chart1" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
            }
        });
        
        //-------------- Chart2 ------------------------------
        DataAry[0] = "funGetData_PieChart2";        // Table Name
        DataAry[1] = document.getElementById("id_startdate").value;
        DataAry[2] = document.getElementById("id_enddate").value;
        DataAry[3] = document.getElementById("id_Select_Department").value;
        DataAry[4] = document.getElementById("id_Select_Category").value;
        DataAry[5] = document.getElementById("id_Select_Mechanic").value;
        
        if(intDebugEnable === 1) alert("DataAry :" + DataAry);
        $.post('getData_job_History.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 :" + json_data2);           
            var res = $.parseJSON(json_data2);                        
            if(res.Status_Ary[0] === "true")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data available");
                //- 1. DONUT CHART - CheckIn Efficency Chart
                document.getElementById("id_divBuildingMnt_chart2").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart2").innerHTML = '<canvas id="id_canBuildingMnt_chart2" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
                
                const AryCheckIn_Lable      = res.Data_Ary[0];
                const AryCheckIn_Colors   = ["red","blue","green","#FFFF00"];

                var donutChartCanvas = $('#id_canBuildingMnt_chart2').get(0).getContext('2d');               
                var donutData = {
                    labels: AryCheckIn_Lable,
                    datasets: [
                    {
                        data: res.Data_Ary[1],
                        backgroundColor : AryCheckIn_Colors
                    }]};
                var donutOptions = {maintainAspectRatio : false, responsive : true};
                new Chart(donutChartCanvas, 
                {
                    options: 
                    {  
                        plugins: 
                        {
                            // Change options for ALL labels of THIS CHART
                            datalabels: {
                                font: {size: 20},
                                color: '#000000', 
                                anchor: 'center', 
                                display: 'auto'}
                        }
                    }, 
                    type: 'doughnut',
                    data: donutData,
                    //ptions: donutOptions
                });
            }
            else if(res.Status_Ary[0] === "false")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data not available"); 
                document.getElementById("id_divBuildingMnt_chart2").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart2").innerHTML = '<canvas id="id_canBuildingMnt_chart2" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
                
            }
            else
            {
                if(intDebugEnable === 1) alert("Error"); 
                document.getElementById("id_divBuildingMnt_chart2").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart2").innerHTML = '<canvas id="id_canBuildingMnt_chart2" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
                
            }
        });  
     
    }
    function funLoadBarChart() 
    {
        let intDebugEnable = 1;

        //alert("this is Bar chart");
        //- 1. get data from php page
        const DataAry = [];    
        
        //-------------- Bar Chart1 ------------------------------
        DataAry[0] = "funGetData_BarChart1";        // Table Name
        DataAry[1] = document.getElementById("id_startdate").value;
        DataAry[2] = document.getElementById("id_enddate").value;
        DataAry[3] = document.getElementById("id_Select_Department").value;
        DataAry[4] = document.getElementById("id_Select_Category").value;
        DataAry[5] = document.getElementById("id_Select_Mechanic").value;
        
        if(intDebugEnable === 1) alert("DataAry :" + DataAry);
        $.post('getData_job_History.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 :" + json_data2);           
            var res = $.parseJSON(json_data2);                 
            if(res.Status_Ary[0] === "true")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data available");
                //--- Refres the Canvas DIV -----------------------------------------------   
                document.getElementById("id_divBuildingMnt_chart3").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart3").innerHTML = '<canvas id="id_canBuildingMnt_chart3" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
            
                var barChartCanvas = $('#id_canBuildingMnt_chart3').get(0).getContext('2d');
                var barChart2_Data2 = {
                    labels: res.Data_Ary[0],
                    datasets: [{
                        label: 'Completed',
                        backgroundColor: 'blue',
                        data: res.Data_Ary[1] // Data array for Auto-Verified
                    }, {
                        label: 'inprogress',
                        backgroundColor: 'green',
                        data: res.Data_Ary[2] // Data array for Verified
                    }]
                };

                new Chart(barChartCanvas, {
                    type: 'bar',
                    data: barChart2_Data2,
                    options: {
                        scales: {
                            xAxes: [{
                                stacked: true
                            }],
                            yAxes: [{
                                stacked: true
                            }]
                        },
                        plugins: {
                            datalabels: {
                                font: {
                                    size: 20
                                },
                                color: '#000000',
                                anchor: 'center',
                                rotation: '0'
                            }
                        }
                    }
                });


            }
            else if(res.Status_Ary[0] === "false")   // No data found, insert new record
            {
                document.getElementById("id_divBuildingMnt_chart3").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart3").innerHTML = '<canvas id="id_canBuildingMnt_chart3" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
                if(intDebugEnable === 1) alert("data not available"); 
            }
            else
            {   
                document.getElementById("id_divBuildingMnt_chart3").innerHTML = '&nbsp;';
                document.getElementById("id_divBuildingMnt_chart3").innerHTML = '<canvas id="id_canBuildingMnt_chart3" style="min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;"></canvas>';
               if(intDebugEnable === 1) alert("Error"); 
            }

        
        }); 
    }

    //-------------------- ViewReport Function --------------------------------------------
    function funLoadTable() 
    { 
        let intDebugEnable = 0;
        if(intDebugEnable === 1) alert("funLoadTable");

        const DataAry = []; 
        //--------------TABLE 1------------------------------
        DataAry[0] = "funGetData_Table1";        // Table Name
        DataAry[1] = document.getElementById("id_startdate").value;
        DataAry[2] = document.getElementById("id_enddate").value;
        DataAry[3] = document.getElementById("id_Select_Department").value;
        DataAry[4] = document.getElementById("id_Select_Category").value;
        DataAry[5] = document.getElementById("id_Select_Mechanic").value;
        
        if(intDebugEnable === 1) alert("DataAry :" + DataAry);
        $.post('getData_job_History.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 :" + json_data2);           
            var res = $.parseJSON(json_data2);                 
            if(res.Status_Ary[0] === "true")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data available");
                            //var intLinewiseTotalDT = 0;           
                var dtbl2 = $('#id_table1').DataTable();
                dtbl2.clear().draw();
                //---------- Insert Table Header -------------------------            
                //$(dtbl2.column(2).header()).html("Downtime (Min)");
                //$(dtbl2.column(3).header()).html("Occurrence");                     
                //---------- Insert Table Body -------------------------
                intRowCount = res.Data_Ary.length;
                if(intDebugEnable === 1) alert("intRowCount :" + intRowCount);
                let intTmp = 0;
                for(i=0;i<intRowCount;i++)
                {
                    //intLinewiseTotalDT = res.LineWiseDowntimeCategory1_Ary[i]+res.LineWiseDowntimeCategory2_Ary[i]+res.LineWiseDowntimeCategory3_Ary[i]+res.LineWiseDowntimeCategory4_Ary[i]+res.LineWiseDowntimeCategory5_Ary[i]+res.LineWiseDowntimeCategory6_Ary[i];
                    intTmp = i + 1;
                    dtbl2.row.add([intTmp.toString(), res.Data_Ary[i][0], res.Data_Ary[i][1], res.Data_Ary[i][2], res.Data_Ary[i][3] , res.Data_Ary[i][4],res.Data_Ary[i][5],res.Data_Ary[i][6],res.Data_Ary[i][7],res.Data_Ary[i][8],res.Data_Ary[i][9],res.Data_Ary[i][10],res.Data_Ary[i][11],res.Data_Ary[i][12]]).draw(false);
                } 
            }
            else if(res.Status_Ary[0] === "false")   // No data found, insert new record
            {
                var dtbl2 = $('#id_table1').DataTable();
                dtbl2.clear().draw();
                if(intDebugEnable === 1) alert("data not available"); 
            }
            else
            {
                var dtbl2 = $('#id_table1').DataTable();
                dtbl2.clear().draw();
                if(intDebugEnable === 1) alert("Error"); 
            }
        });  
        
        
        //--------------TABLE 2------------------------------
        DataAry[0] = "funGetData_Table2";        // Table Name
        DataAry[1] = document.getElementById("id_startdate").value;
        DataAry[2] = document.getElementById("id_enddate").value;
        DataAry[3] = document.getElementById("id_Select_Department").value;
        DataAry[4] = document.getElementById("id_Select_Category").value;
        DataAry[5] = document.getElementById("id_Select_Mechanic").value;
        
        if(intDebugEnable === 1) alert("DataAry :" + DataAry);
        $.post('getData_job_History.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 :" + json_data2);           
            var res = $.parseJSON(json_data2);                 
            if(res.Status_Ary[0] === "true")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data available");
                            //var intLinewiseTotalDT = 0;           
                var dtbl2 = $('#id_table2').DataTable();
                dtbl2.clear().draw();
                //---------- Insert Table Header -------------------------            
                //$(dtbl2.column(2).header()).html("Downtime (Min)");
                //$(dtbl2.column(3).header()).html("Occurrence");                     
                //---------- Insert Table Body -------------------------
                intRowCount = res.Data_Ary.length;
                if(intDebugEnable === 1) alert("intRowCount :" + intRowCount);
                let intTmp = 0;
                for(i=0;i<intRowCount;i++)
                {
                    //intLinewiseTotalDT = res.LineWiseDowntimeCategory1_Ary[i]+res.LineWiseDowntimeCategory2_Ary[i]+res.LineWiseDowntimeCategory3_Ary[i]+res.LineWiseDowntimeCategory4_Ary[i]+res.LineWiseDowntimeCategory5_Ary[i]+res.LineWiseDowntimeCategory6_Ary[i];
                    intTmp = i + 1;
                    dtbl2.row.add([intTmp.toString(), res.Data_Ary[i][0], res.Data_Ary[i][1], res.Data_Ary[i][2], res.Data_Ary[i][3] , res.Data_Ary[i][4],res.Data_Ary[i][5],res.Data_Ary[i][6],res.Data_Ary[i][7],res.Data_Ary[i][8],res.Data_Ary[i][9],res.Data_Ary[i][10],res.Data_Ary[i][11],res.Data_Ary[i][12]]).draw(false);
                } 
            }
            else if(res.Status_Ary[0] === "false")   // No data found, insert new record
            {
                var dtbl2 = $('#id_table2').DataTable();
                dtbl2.clear().draw();
                if(intDebugEnable === 1) alert("data not available"); 
            }
            else
            {
                var dtbl2 = $('#id_table2').DataTable();
                dtbl2.clear().draw();
                if(intDebugEnable === 1) alert("Error"); 
            }
        });

        //--------------TABLE 3------------------------------
        DataAry[0] = "funGetData_Table3";        // Table Name
        DataAry[1] = document.getElementById("id_startdate").value;
        DataAry[2] = document.getElementById("id_enddate").value;
        DataAry[3] = document.getElementById("id_Select_Department").value;
        DataAry[4] = document.getElementById("id_Select_Category").value;
        DataAry[5] = document.getElementById("id_Select_Mechanic").value;
        
        if(intDebugEnable === 1) alert("DataAry :" + DataAry);
        $.post('getData_job_History.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 :" + json_data2);           
            var res = $.parseJSON(json_data2);                 
            if(res.Status_Ary[0] === "true")   // No data found, insert new record
            {
                if(intDebugEnable === 1) alert("data available");
                            //var intLinewiseTotalDT = 0;           
                var dtbl2 = $('#id_table3').DataTable();
                dtbl2.clear().draw();
                //---------- Insert Table Header -------------------------            
                //$(dtbl2.column(2).header()).html("Downtime (Min)");
                //$(dtbl2.column(3).header()).html("Occurrence");                     
                //---------- Insert Table Body -------------------------
                intRowCount = res.Data_Ary.length;
                if(intDebugEnable === 1) alert("intRowCount :" + intRowCount);
                let intTmp = 0;
                for(i=0;i<intRowCount;i++)
                {
                    //intLinewiseTotalDT = res.LineWiseDowntimeCategory1_Ary[i]+res.LineWiseDowntimeCategory2_Ary[i]+res.LineWiseDowntimeCategory3_Ary[i]+res.LineWiseDowntimeCategory4_Ary[i]+res.LineWiseDowntimeCategory5_Ary[i]+res.LineWiseDowntimeCategory6_Ary[i];
                    intTmp = i + 1;
                    dtbl2.row.add([intTmp.toString(), res.Data_Ary[i][0], res.Data_Ary[i][1], res.Data_Ary[i][2], res.Data_Ary[i][3] , res.Data_Ary[i][4],res.Data_Ary[i][5],res.Data_Ary[i][6],res.Data_Ary[i][7],res.Data_Ary[i][8],res.Data_Ary[i][9],res.Data_Ary[i][10],res.Data_Ary[i][11],res.Data_Ary[i][12],res.Data_Ary[i][13],res.Data_Ary[i][14],res.Data_Ary[i][15],res.Data_Ary[i][16],res.Data_Ary[i][17],res.Data_Ary[i][18],res.Data_Ary[i][19]]).draw(false);
                } 
            }
            else if(res.Status_Ary[0] === "false")   // No data found, insert new record
            {
                var dtbl2 = $('#id_table3').DataTable();
                dtbl2.clear().draw();
                if(intDebugEnable === 1) alert("data not available"); 
            }
            else
            {
                var dtbl2 = $('#id_table3').DataTable();
                dtbl2.clear().draw();
                if(intDebugEnable === 1) alert("Error"); 
            }
        });
    }
    //------------- Load Departments to Filter Data -------------------
    function funLoad_Departments() 
    {
        let intDebugEnable = 0;        
        if(intDebugEnable === 1)    alert("funLoad_Departments");
                
        const DataAry = [];         
        //---------------- Load Departments --------------------------------------
        DataAry[0] = "funGetFilteredData";        // Function Name    
        DataAry[1] = "Department";
        DataAry[2] = "tblwo_errorlevel_breakdown";
        DataAry[3] = "0";
        if(intDebugEnable === 1)    alert("DataAry :" + DataAry);      
        $.post('comFunctions.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 : " + json_data2);
            var res = $.parseJSON(json_data2);  
            if(res.Status_Ary[0] === "true")
            {
                AryDepartment = res.Data_Ary;
                if(intDebugEnable === 1) alert("AryDepartment : " + AryDepartment); 
                //------------ Remove All Items in "AryUserType" -----------------------------------
                var options5 = document.querySelectorAll('#id_Select_Department option');
                options5.forEach(o => o.remove());
                                 
                //------------ Fill New Items -------------------------------------
                var sel_UserType = document.getElementById("id_Select_Department");
                var opt4 = "All";
                var el4 = document.createElement("option");
                el4.textContent = opt4;
                el4.value = opt4;
                sel_UserType.appendChild(el4);
                for(var i = 0; i < AryDepartment.length; i++)
                {
                    var opt5 = AryDepartment[i];
                    var el5 = document.createElement("option");
                    el5.textContent = opt5;
                    el5.value = opt5;
                    sel_UserType.appendChild(el5);
                }
                //-------------- Set User Department in Filter ------------------
                funLoadPieChart();
                funLoadBarChart();
                funLoadTable();
            }
            
        });
    }
    
    //------------- Load Categories to Filter Data -------------------
    function funLoad_Categories() 
    {
        let intDebugEnable = 0;        
        if(intDebugEnable === 1)    alert("funLoad_Departments");
                
        const DataAry = [];         
        //---------------- Load Wo categories --------------------------------------
        DataAry[0] = "funGetFilteredData";        // Function Name    
        DataAry[1] = "WorkOrderCategory";
        DataAry[2] = "tblwo_event";
        DataAry[3] = "0";
        if(intDebugEnable === 1)    alert("DataAry :" + DataAry);      
        $.post('comFunctions.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 : " + json_data2);
            var res = $.parseJSON(json_data2);  
            if(res.Status_Ary[0] === "true")
            {
                AryDepartment = res.Data_Ary;
                if(intDebugEnable === 1) alert("AryDepartment : " + AryDepartment); 
                //------------ Remove All Items in "AryUserType" -----------------------------------
                var options5 = document.querySelectorAll('#id_Select_Category option');
                options5.forEach(o => o.remove());
                                 
                //------------ Fill New Items -------------------------------------
                var sel_UserType = document.getElementById("id_Select_Category");
                var opt4 = "All";
                var el4 = document.createElement("option");
                el4.textContent = opt4;
                el4.value = opt4;
                sel_UserType.appendChild(el4);
                for(var i = 0; i < AryDepartment.length; i++)
                {
                    var opt5 = AryDepartment[i];
                    var el5 = document.createElement("option");
                    el5.textContent = opt5;
                    el5.value = opt5;
                    sel_UserType.appendChild(el5);
                }
                //-------------- Set User Department in Filter ------------------
                //document.getElementById("id_funHome_SelDepartmentFilter").value = JS_SessionArry[0].CurrentUserDepartment; 
                //funRefresh_WoTable();
            }
            
        });
    }

    function funLoad_Mechanic() 
    {
        let intDebugEnable = 0;        
        if(intDebugEnable === 1)    alert("funLoad_Departments");
                
        const DataAry = [];         
        //---------------- Load Mechanic --------------------------------------
        DataAry[0] = "funGetFilteredData";        // Function Name    
        DataAry[1] = "EmpName , EPF";
    
        DataAry[2] = "tblusers_account";
        DataAry[3] = "1";
        DataAry[4] = "UserType";
        DataAry[5] = "MC";
        if(intDebugEnable === 1)    alert("DataAry :" + DataAry);      
        $.post('comFunctions.php', { userpara: DataAry }, function(json_data2) 
        {
            if(intDebugEnable === 1) alert("json_data2 : " + json_data2);
            var res = $.parseJSON(json_data2);  
            if(res.Status_Ary[0] === "true")
            {
                AryDepartment = res.Data_Ary;
                if(intDebugEnable === 1) alert("AryDepartment : " + AryDepartment); 
                //------------ Remove All Items in "AryUserType" -----------------------------------
                var options5 = document.querySelectorAll('#id_Select_Mechanic option');
                options5.forEach(o => o.remove());
                                 
                //------------ Fill New Items -------------------------------------
                var sel_UserType = document.getElementById("id_Select_Mechanic");
                var opt4 = "All";
                var el4 = document.createElement("option");
                el4.textContent = opt4;
                el4.value = opt4;
                sel_UserType.appendChild(el4);
                for(var i = 0; i < AryDepartment.length; i++)
                {
                    if (i%2==0){
                        var opt5 = AryDepartment[i];
                        var el5 = document.createElement("option");
                        el5.textContent = opt5;
                                }
                    else{
                        var opt6 = AryDepartment[i];
                        el5.value = opt6;
                         sel_UserType.appendChild(el5);
                        }

                    
                   
                }
                //-------------- Set User Department in Filter ------------------
                //document.getElementById("id_funHome_SelDepartmentFilter").value = JS_SessionArry[0].CurrentUserDepartment; 
                //funRefresh_WoTable();
            }
            
        });
    }
    
    //------------- Load All Charts And Table ------------------
    function funLoadAllChart() 
    {
        let intDebugEnable = 0;        
        if(intDebugEnable === 1)    alert("funLoadAllChart");
        funLoadPieChart();
        funLoadBarChart();
        funLoadTable();
        
    }
    
</script>
</body>
</html>


















Backend 

<?php

    session_start();
    require_once('../../initialize.php');
    require_once('../../config.php');
    
    $num = $_POST["userpara"];
    
    $strFuncType = $num[0];    
    //$strFuncType = "funGetData_BarChart1";
      
    //----------- Set TimeZone ----------------------------
    date_default_timezone_set('Asia/Kolkata');
    $strServerDateTime = date("Y-m-d H:i:s");    
    //----------- Declare Variables -----------------------  
    $i = 0; 
    $j = 0;     
    $Status_ary     = array();
    $ReturnData_ary = array();
    //$ReturnData_ary[0][0]  = "NA";
    $strText    = "";
    $ReturnData_ary[0][0] = "NA"; 
    //$ReturnData_ary[0][1] = "NA";
    //$ReturnData_ary[1][0] = "NA"; 
    //$ReturnData_ary[1][1] = "NA";
    
    $intWoState = 4;
    
    if($strFuncType === "funGetData_PieChart1") {
        $strStartDate    = $num[1];
        $strEndDate      = $num[2];
        $strDepartment   = $num[3];
        $strCategory     = $num[4];
        $strMechanic     = $num[5];
        
        $whereClause = "wo.ClosedDateTime IS NOT NULL AND wo.CreatedDateTime BETWEEN :sdate AND :edate";
        
        if ($strDepartment !== "All") {
            $whereClause .= " AND wo.WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND wo.WorkOrderCategory = '" . $strCategory . "'";
        }
        if ($strMechanic !== "All") {
            $whereClause .= " AND ciu.CheckInUser ='" . $strMechanic . "'";
        }
        
        try {
            $sqlString = "
                SELECT 
                    CASE WHEN wo.WoStatus IN ('Auto-Verified', 'Verified') THEN 'Close' ELSE wo.WoStatus END AS WoStatusGroup, 
                    COUNT(*) AS count 
                FROM 
                    tblwo_event AS wo
                    INNER JOIN tblwo_allcheckinusers AS ciu ON wo.WorkOrderNo = ciu.WorkOrderNo
                WHERE 
                    " . $whereClause . "
                GROUP BY 
                    WoStatusGroup";
    
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStartDate); 
            $stmt->bindParam(':edate', $strEndDate); 
             
            $stmt->execute();
            $result = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
            $ReturnData_ary = array();
            $Status_ary = array();
    
            if (empty($result)) {
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found";
            } else {
                foreach($result as $row) {
                    $ReturnData_ary[0][] = $row['WoStatusGroup'];
                    $ReturnData_ary[1][] = $row['count']; 
                }
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } catch(PDOException $ex) {
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn = null;
    }
    

    else if($strFuncType === "funGetData_PieChart2") //------------- funUpdateEventLog --------------------
    {
        
        $strStarDate       = $num[1];
        $strEndDate        = $num[2];
        $strDepartment  = $num[3];
        $strCategory    = $num[4];
        $strMechanic      = $num[5];
         
        $whereClause = "wo.ClosedDateTime IS NOT NULL AND wo.CreatedDateTime BETWEEN :sdate AND :edate";
                
        if ($strDepartment !== "All") {
            $whereClause .= " AND wo.WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND wo.WorkOrderCategory = '" . $strCategory . "'";
        }  
        if ($strMechanic !== "All") 
        {
            
                $whereClause .= " AND ciu.CheckInUser ='" . $strMechanic . "'";
                      
        }
        
        try 
        {    
            $sqlString = "
            SELECT 
                wo.WorkOrderCategory, 
                SUM(CASE WHEN wo.WoStatus IN ('Auto-Verified', 'Verified') THEN 1 ELSE 0 END) AS verified_count 
            FROM 
                tblwo_event AS wo 
                INNER JOIN tblwo_allcheckinusers AS ciu ON wo.WorkOrderNo = ciu.WorkOrderNo
            WHERE " . $whereClause." GROUP BY wo.WorkOrderCategory";

                


            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            //$stmt = $conn->prepare("SELECT WorkOrderNo,CheckInUserDateTime,CheckOutUserDateTime FROM tblwo_allcheckinusers WHERE CheckInUser=:chkinusr");
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStarDate); 
            $stmt->bindParam(':edate', $strEndDate); 
             
            $stmt->execute();
            // set the resulting array to associative
            $stmt->setFetchMode(PDO::FETCH_ASSOC);        
            $result = $stmt->fetchAll();
            $i = 0;
            foreach($result as $row)
            {   
                $ReturnData_ary[0][$i] = $row['WorkOrderCategory'];
                $ReturnData_ary[1][$i] = $row['verified_count']; 
                $i++;
            }  
            if($i === 0)    // No Data
            {
                $ReturnData_ary[0] = $strText;
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found"; 
            }
            else
            {
                //$ReturnData_ary[0] = $strText;
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } 
        catch(PDOException $ex) 
        {
            //$error =  "Error: " . $e->getMessage();
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn = null;
    }

    else if($strFuncType === "funGetData_BarChart1") //------------- funUpdateEventLog --------------------
    {
        $strStartDate2   = $num[1];
        $strEndDate2     = $num[2];
        $strDepartment   = $num[3];
        $strCategory     = $num[4];
        $strMechanic     = $num[5];

        $whereClause = "wo.ClosedDateTime IS NOT NULL AND wo.CreatedDateTime BETWEEN :sdate AND :edate";

        if ($strDepartment !== "All") {
            $whereClause .= " AND wo.WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND wo.WorkOrderCategory = '" . $strCategory . "'";
        }
        if ($strMechanic !== "All") {
            // Assuming the table alias for tblwo_allcheckinusers is ciu
            $whereClause .= " AND ciu.CheckInUser = '" . $strMechanic . "'";
        }

        try {             
            $sqlString = "
                SELECT 
                    wo.WoDepartment,
                    SUM(CASE WHEN wo.WoStatus IN ('Auto-Verified', 'Verified') THEN 1 ELSE 0 END) AS close_count,
                    SUM(CASE WHEN wo.WoStatus = 'Inprogress' THEN 1 ELSE 0 END) AS inprogress_count
                FROM 
                    tblwo_event AS wo
                INNER JOIN 
                    tblwo_allcheckinusers AS ciu ON wo.WorkOrderNo = ciu.WorkOrderNo
                WHERE 
                    " . $whereClause . "
                GROUP BY 
                    wo.WoDepartment";

            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            //$stmt = $conn->prepare("SELECT WorkOrderNo,CheckInUserDateTime,CheckOutUserDateTime FROM tblwo_allcheckinusers WHERE CheckInUser=:chkinusr");
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStartDate2); 
            $stmt->bindParam(':edate', $strEndDate2); 
             
            $stmt->execute();
            // set the resulting array to associative
            $stmt->setFetchMode(PDO::FETCH_ASSOC);        
            $result = $stmt->fetchAll();
            $i = 0;
            foreach($result as $row)
            {   
                $ReturnData_ary[0][$i] = $row['WoDepartment'];
                $ReturnData_ary[1][$i] = $row['close_count']; 
                $ReturnData_ary[2][$i] = $row['inprogress_count'];
                 
                $i++;
            }  
            if($i === 0)    // No Data
            {
                $ReturnData_ary[0] = $strText;
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found"; 
            }
            else
            {
                //$ReturnData_ary[0] = $strText;
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } 
        catch(PDOException $ex) 
        {
            //$error =  "Error: " . $e->getMessage();
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn = null;
    }
    
    //------------- Table data load --------------------
    else if($strFuncType === "funGetData_Table1") 

   
    {
        $strStarDate3       = $num[1];
        $strEndDate3        = $num[2];
        $strDepartment      = $num[3];
        $strCategory        = $num[4];
        $strMechanic          = $num[5];
        
        $whereClause = "wo.ClosedDateTime IS NOT NULL AND wo.CreatedDateTime BETWEEN :sdate AND :edate";
                
        if ($strDepartment !== "All") {
            $whereClause .= " AND wo.WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND wo.WorkOrderCategory = '" . $strCategory . "'";
        }          
        if ($strMechanic !== "All") 
        {
            $whereClause .= " AND ciu.CheckInUser = '" . $strMechanic . "'";          
        }
        
        try 
        { 
            $sqlString = "
                SELECT             
                    wo.WorkOrderNo,
                    wo.McCategory,
                    wo.MachineNo,
                    wo.WoDepartment,
                    wo.WorkOrderCategory,
                    wo.CreatedDateTime,
                    wo.CreatedUser,
                    wo.CreatedFaultType,
                    wo.RespondDateTime,
                    wo.ClosedDateTime,
                    wo.ClosedUser,
                    TIMESTAMPDIFF(MINUTE, wo.CreatedDateTime, wo.ClosedDateTime) as TotTimeDuration,
                    wo.VerifiedDateTime,
                    wo.VerifiedUser,
                    wo.ReOpenedDateTime,
                    wo.ReOpenedUser,
                    wo.WoDescription,
                    wo.WoStatus,
                    wo.ClosedFaultType,
                    wo.ClosedFaultLevel1,
                    wo.ClosedFaultLevel2,
                    (
                        SELECT GROUP_CONCAT(DISTINCT ua.EmpName SEPARATOR ', ') 
                        FROM tblwo_allocatedusers AS acu
                        LEFT JOIN tblusers_account AS ua ON acu.AllocatedUser = ua.EPF
                        WHERE acu.WorkOrderNo = wo.WorkOrderNo
                    ) AS AllocatedUsers,
                    (
                        SELECT GROUP_CONCAT(DISTINCT ua.EmpName SEPARATOR ', ') 
                        FROM tblwo_allcheckinusers AS ciu
                        LEFT JOIN tblusers_account AS ua ON ciu.CheckInUser = ua.EPF
                        WHERE ciu.WorkOrderNo = wo.WorkOrderNo
                    ) AS CheckInUsers
                FROM 
                    tblwo_event AS wo 
                    INNER JOIN tblwo_allcheckinusers AS ciu ON wo.WorkOrderNo = ciu.WorkOrderNo
                WHERE " . $whereClause;



                
                        
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStarDate3); 
            $stmt->bindParam(':edate', $strEndDate3);
            
            
            $stmt->execute();
            // set the resulting array to associative
            $stmt->setFetchMode(PDO::FETCH_ASSOC);        
            $result = $stmt->fetchAll();
            $i = 0;
            foreach($result as $row)
            {
                $ReturnData_ary[$i][0] = $row['WorkOrderNo'];
                $ReturnData_ary[$i][1] = $row['CreatedDateTime'];
                $ReturnData_ary[$i][2] = $row['WoDepartment']; 
                $ReturnData_ary[$i][3] = $row['WorkOrderCategory']; 
                $ReturnData_ary[$i][4] = $row['McCategory']; 
                $ReturnData_ary[$i][5] = $row['MachineNo']; 
                $ReturnData_ary[$i][6] = $row['ClosedFaultType']; 
                
                $ReturnData_ary[$i][7] = $row['WoDescription']; 
                $ReturnData_ary[$i][8] = $row['RespondDateTime']; 
                $ReturnData_ary[$i][9] = $row['ClosedDateTime'];
                $ReturnData_ary[$i][10] = $row['TotTimeDuration'];

                $ReturnData_ary[$i][11] = $row['WoStatus'];     
                $ReturnData_ary[$i][12] = $row['CreatedUser'];           
                  
                
                /*$ReturnData_ary[$i][10] = $row['AllocatedUsers'];                
                $ReturnData_ary[$i][11] = $row['CheckInUsers'];
                
                                
                $ReturnData_ary[$i][13] = $row['ClosedUser'];                 
                  
                
                
                $ReturnData_ary[$i][15] = $row['ReOpenedDateTime']; 
                $ReturnData_ary[$i][16] = $row['ReOpenedUser']; 
                $ReturnData_ary[$i][17] = $row['VerifiedDateTime']; 
                $ReturnData_ary[$i][18] = $row['VerifiedUser'];*/


                

                               
                $i++;
            }  
            if($i === 0)    // No Data
            {
                $ReturnData_ary[0] = $strText;
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found"; 
            }
            else
            {
                //$ReturnData_ary[0] = $strText;
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } 
        catch(PDOException $ex) 
        {
            //$error =  "Error: " . $e->getMessage();
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn=null;
    }

    else if($strFuncType === "funGetData_Table2") 

   
    {
        $strStarDate3       = $num[1];
        $strEndDate3        = $num[2];
        $strDepartment      = $num[3];
        $strCategory        = $num[4];
        $strMechanic          = $num[5];
        
        $whereClause = "wo.ClosedDateTime IS NOT NULL AND wo.CreatedDateTime BETWEEN :sdate AND :edate";
                
        if ($strDepartment !== "All") {
            $whereClause .= " AND wo.WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND wo.WorkOrderCategory = '" . $strCategory . "'";
        }          
        if ($strMechanic !== "All") 
            $whereClause .= " AND ciu.CheckInUser = '" . $strMechanic . "'";    
        
        try 
        { 
            $sqlString = "
                SELECT             
                    wo.WorkOrderNo,
                    wo.McCategory,
                    wo.MachineNo,
                    wo.WoDepartment,
                    wo.WorkOrderCategory,
                    wo.CreatedDateTime,
                    wo.CreatedUser,
                    wo.CreatedFaultType,
                    wo.RespondDateTime,
                    wo.ClosedDateTime,
                    wo.ClosedUser,
                    TIMESTAMPDIFF(MINUTE, wo.CreatedDateTime, wo.ClosedDateTime) as TotTimeDuration,
                    wo.VerifiedDateTime,
                    wo.VerifiedUser,
                    wo.ReOpenedDateTime,
                    wo.ReOpenedUser,
                    wo.WoDescription,
                    wo.WoStatus,
                    wo.ClosedFaultType,
                    wo.ClosedFaultLevel1,
                    wo.ClosedFaultLevel2,
                    (
                        SELECT GROUP_CONCAT(DISTINCT ua.EmpName SEPARATOR ', ') 
                        FROM tblwo_allocatedusers AS acu
                        LEFT JOIN tblusers_account AS ua ON acu.AllocatedUser = ua.EPF
                        WHERE acu.WorkOrderNo = wo.WorkOrderNo
                    ) AS AllocatedUsers,
                    (
                        SELECT GROUP_CONCAT(DISTINCT ua.EmpName SEPARATOR ', ') 
                        FROM tblwo_allcheckinusers AS ciu
                        LEFT JOIN tblusers_account AS ua ON ciu.CheckInUser = ua.EPF
                        WHERE ciu.WorkOrderNo = wo.WorkOrderNo
                    ) AS CheckInUsers
                FROM 
                    tblwo_event AS wo 
                    INNER JOIN tblwo_allcheckinusers AS ciu ON wo.WorkOrderNo = ciu.WorkOrderNo
                WHERE " . $whereClause;
                        
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStarDate3); 
            $stmt->bindParam(':edate', $strEndDate3);
            
            
            $stmt->execute();
            // set the resulting array to associative
            $stmt->setFetchMode(PDO::FETCH_ASSOC);        
            $result = $stmt->fetchAll();
            $i = 0;
            foreach($result as $row)
            {
                $ReturnData_ary[$i][0] = $row['WorkOrderNo'];
                $ReturnData_ary[$i][1] = $row['CreatedDateTime'];
                $ReturnData_ary[$i][2] = $row['WoDepartment']; 
                $ReturnData_ary[$i][3] = $row['WorkOrderCategory']; 
                $ReturnData_ary[$i][4] = $row['McCategory']; 
                $ReturnData_ary[$i][5] = $row['MachineNo']; 
                $ReturnData_ary[$i][6] = $row['ClosedFaultType']; 
                
                $ReturnData_ary[$i][7] = $row['WoDescription']; 
                $ReturnData_ary[$i][8] = $row['CreatedUser']; 
                $ReturnData_ary[$i][9] = $row['AllocatedUsers'];
                $ReturnData_ary[$i][10] = $row['WoStatus'];

                $ReturnData_ary[$i][11] = $row['RespondDateTime'];     
                $ReturnData_ary[$i][12] = $row['CheckInUsers'];           
                  
                
                /*$ReturnData_ary[$i][10] = $row['AllocatedUsers'];                
                $ReturnData_ary[$i][11] = $row['CheckInUsers'];
                
                                
                $ReturnData_ary[$i][13] = $row['ClosedUser'];                 
                  
                
                
                $ReturnData_ary[$i][15] = $row['ReOpenedDateTime']; 
                $ReturnData_ary[$i][16] = $row['ReOpenedUser']; 
                $ReturnData_ary[$i][17] = $row['VerifiedDateTime']; 
                $ReturnData_ary[$i][18] = $row['VerifiedUser'];*/


                

                               
                $i++;
            }  
            if($i === 0)    // No Data
            {
                $ReturnData_ary[0] = $strText;
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found"; 
            }
            else
            {
                //$ReturnData_ary[0] = $strText;
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } 
        catch(PDOException $ex) 
        {
            //$error =  "Error: " . $e->getMessage();
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn=null;
    }

    else if($strFuncType === "funGetData_Table3") 

   
    {
        $strStarDate3       = $num[1];
        $strEndDate3        = $num[2];
        $strDepartment      = $num[3];
        $strCategory        = $num[4];
        $strMechanic          = $num[5];
        
        $whereClause = "wo.ClosedDateTime IS NOT NULL AND wo.CreatedDateTime BETWEEN :sdate AND :edate";
                
        if ($strDepartment !== "All") {
            $whereClause .= " AND wo.WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND wo.WorkOrderCategory = '" . $strCategory . "'";
        }          
        if ($strMechanic !== "All") 
        {
            $whereClause .= " AND ciu.CheckInUser = '" . $strMechanic . "'";           
        }
        
        try 
        { 
            $sqlString = "
                SELECT             
                    wo.WorkOrderNo,
                    wo.McCategory,
                    wo.MachineNo,
                    wo.WoDepartment,
                    wo.WorkOrderCategory,
                    wo.CreatedDateTime,
                    wo.CreatedUser,
                    wo.CreatedFaultType,
                    wo.RespondDateTime,
                    wo.ClosedDateTime,
                    wo.ClosedUser,
                    TIMESTAMPDIFF(MINUTE, wo.CreatedDateTime, wo.ClosedDateTime) as TotTimeDuration,
                    wo.VerifiedDateTime,
                    wo.VerifiedUser,
                    wo.ReOpenedDateTime,
                    wo.ReOpenedUser,
                    wo.WoDescription,
                    wo.WoStatus,
                    wo.ClosedFaultType,
                    wo.ClosedFaultLevel1,
                    wo.ClosedFaultLevel2,
                    (
                        SELECT GROUP_CONCAT(DISTINCT ua.EmpName SEPARATOR ', ') 
                        FROM tblwo_allocatedusers AS acu
                        LEFT JOIN tblusers_account AS ua ON acu.AllocatedUser = ua.EPF
                        WHERE acu.WorkOrderNo = wo.WorkOrderNo
                    ) AS AllocatedUsers,
                    (
                        SELECT GROUP_CONCAT(DISTINCT ua.EmpName SEPARATOR ', ') 
                        FROM tblwo_allcheckinusers AS ciu
                        LEFT JOIN tblusers_account AS ua ON ciu.CheckInUser = ua.EPF
                        WHERE ciu.WorkOrderNo = wo.WorkOrderNo
                    ) AS CheckInUsers
                FROM 
                    tblwo_event AS wo 
                    INNER JOIN tblwo_allcheckinusers AS ciu ON wo.WorkOrderNo = ciu.WorkOrderNo
                WHERE " . $whereClause;
                        
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStarDate3); 
            $stmt->bindParam(':edate', $strEndDate3);
            
            
            $stmt->execute();
            // set the resulting array to associative
            $stmt->setFetchMode(PDO::FETCH_ASSOC);        
            $result = $stmt->fetchAll();
            $i = 0;
            foreach($result as $row)
            {
                $ReturnData_ary[$i][0] = $row['WorkOrderNo'];
                $ReturnData_ary[$i][1] = $row['CreatedDateTime'];
                $ReturnData_ary[$i][2] = $row['WoDepartment']; 
                $ReturnData_ary[$i][3] = $row['WorkOrderCategory']; 
                $ReturnData_ary[$i][4] = $row['McCategory']; 
                $ReturnData_ary[$i][5] = $row['MachineNo']; 
                $ReturnData_ary[$i][6] = $row['ClosedFaultType']; 
                
                $ReturnData_ary[$i][7] = $row['WoDescription']; 
                $ReturnData_ary[$i][8] = $row['WoStatus']; 
                $ReturnData_ary[$i][9] = $row['CreatedUser'];
                $ReturnData_ary[$i][10] = $row['RespondDateTime'];

                $ReturnData_ary[$i][11] = $row['AllocatedUsers'];     
                $ReturnData_ary[$i][12] = $row['CheckInUsers'];           
                $ReturnData_ary[$i][13] = $row['ClosedDateTime']; 
                $ReturnData_ary[$i][14] = $row['ClosedUser']; 
                $ReturnData_ary[$i][15] = $row['TotTimeDuration']; 
                $ReturnData_ary[$i][16] = $row['ReOpenedDateTime']; 
                $ReturnData_ary[$i][17] = $row['ReOpenedUser']; 
                $ReturnData_ary[$i][18] = $row['VerifiedDateTime']; 
                $ReturnData_ary[$i][19] = $row['VerifiedUser']; 
                
             

                

                               
                $i++;
            }  
            if($i === 0)    // No Data
            {
                $ReturnData_ary[0] = $strText;
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found"; 
            }
            else
            {
                //$ReturnData_ary[0] = $strText;
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } 
        catch(PDOException $ex) 
        {
            //$error =  "Error: " . $e->getMessage();
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn=null;
    }


    /*//------------- Table data load --------------------
    else if($strFuncType === "funGetData_Table") 
    {
        $strStarDate3       = $num[1];
        $strEndDate3        = $num[2];
        $strDepartment      = $num[3];
        $strCategory        = $num[4];
        $strMechanic          = $num[5];
         
        $whereClause = "ClosedDateTime IS NOT NULL AND CreatedDateTime BETWEEN :sdate AND :edate";
                
        if ($strDepartment !== "All") {
            $whereClause .= " AND WoDepartment = '" . $strDepartment . "'";
        }
        if ($strCategory !== "All") {
            $whereClause .= " AND WorkOrderSubCategory = '" . $strCategory . "'";
        }          
        if ($strMechanic !== "All") 
        {
            if ($strMechanic === "Closed") 
            {
                $whereClause .= " AND (WoStatus = 'Closed' OR WoStatus = 'Verified' OR WoStatus = 'Auto-Verified')";
            
            }
            else
            {
                $whereClause .= " AND WoStatus = '" . $strMechanic . "'";
            }           
        }
        
        try 
        {            	 
           
            $sqlString = "
                SELECT 
                    WorkOrderNo,
                    WorkOrderCategory,
                    WorkOrderSubCategory,
                    WoDepartment,
                    CreatedDateTime,
                    CreatedUser,
                    RespondDateTime,
                    ClosedDateTime,
                    ClosedUser,
                    TIMESTAMPDIFF(MINUTE, CreatedDateTime, ClosedDateTime) as TotTimeDuration,
                    VerifiedDateTime,
                    VerifiedUser,
                    ReOpenedDateTime,
                    ReOpenedUser,
                    WoDescription,
                    WoStatus
                    
                FROM 
                    tblwo_event 
                WHERE " . $whereClause;
            
            $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); 
            $stmt = $conn->prepare($sqlString);
            $stmt->bindParam(':sdate', $strStarDate3); 
            $stmt->bindParam(':edate', $strEndDate3);
            
            $stmt->execute();
            // set the resulting array to associative
            $stmt->setFetchMode(PDO::FETCH_ASSOC);        
            $result = $stmt->fetchAll();
            $i = 0;
            foreach($result as $row)
            {
                $ReturnData_ary[$i][0] = $row['WorkOrderNo'];
                $ReturnData_ary[$i][1] = $row['WorkOrderCategory'];
                $ReturnData_ary[$i][2] = $row['WorkOrderSubCategory']; 
                $ReturnData_ary[$i][3] = $row['WoDepartment']; 
                $ReturnData_ary[$i][4] = $row['CreatedDateTime']; 
                $ReturnData_ary[$i][5] = $row['CreatedUser']; 
                
                $ReturnData_ary[$i][6] = $row['WoDescription']; 
                $ReturnData_ary[$i][7] = $row['WoStatus'];
                
                $ReturnData_ary[$i][8] = $row['RespondDateTime'];                 
                $ReturnData_ary[$i][9] = $row['ClosedDateTime'];                
                $ReturnData_ary[$i][10] = $row['ClosedUser']; 
                
                $ReturnData_ary[$i][11] = $row['TotTimeDuration'];
                 
                $ReturnData_ary[$i][12] = $row['ReOpenedDateTime']; 
                $ReturnData_ary[$i][13] = $row['ReOpenedUser']; 
                $ReturnData_ary[$i][14] = $row['VerifiedDateTime']; 
                $ReturnData_ary[$i][15] = $row['VerifiedUser'];
                               
                $i++;
            }  
            if($i === 0)    // No Data
            {
                $ReturnData_ary[0] = $strText;
                $Status_ary[0] = "false";
                $Status_ary[1] = "Data not found"; 
            }
            else
            {
                //$ReturnData_ary[0] = $strText;
                $Status_ary[0] = "true";
                $Status_ary[1] = "Data Available"; 
            } 
        } 
        catch(PDOException $ex) 
        {
            //$error =  "Error: " . $e->getMessage();
            $Status_ary[0] = "error";
            $Status_ary[1] = 'Error Msg: ' .$ex->getMessage();        
        }    
        $conn = null;
    }*/






        $data_ary['Status_Ary'] = $Status_ary;
    $data_ary['Data_Ary']   = $ReturnData_ary;
        
    //print json_encode($error);
    print json_encode($data_ary); 

?>


